(self.webpackChunkbbl_accor_20190620=self.webpackChunkbbl_accor_20190620||[]).push([[179],{4059:(e,t,l)=>{"use strict";l.d(t,{h:()=>a});var n=l(7401);const a=e=>{let{title:t,section:l}=e;return n.createElement("header",null,n.createElement("span",null,t," "),n.createElement("span",null,"⟶"),n.createElement("span",null," ",l))}},1408:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>u,default:()=>m,fragmentSteps:()=>o,fusumaProps:()=>s,slides:()=>r});var n=l(7401),a=l(9332);l(108);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},i.apply(this,arguments)}const r=[e=>(0,a.kt)(n.Fragment,null,(0,a.kt)("h1",null,"Intégration Continue"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Une intégration continue ou de l'intégration continue ?")),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'"There are only two hard things in Computer Science: cache invalidation and naming things", Phil Karlton\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("svg",{className:"qr",version:"1.1",xmlns:"http://www.w3.org/2000/svg",width:"74px",height:"74px",viewBox:"0 0 74 74",preserveAspectRatio:"xMinYMin meet"},(0,a.kt)("rect",{width:"100%",height:"100%",fill:"white",cx:"0",cy:"0"}),(0,a.kt)("path",{d:"M8,8l2,0 0,2 -2,0 0,-2z M10,8l2,0 0,2 -2,0 0,-2z M12,8l2,0 0,2 -2,0 0,-2z M14,8l2,0 0,2 -2,0 0,-2z M16,8l2,0 0,2 -2,0 0,-2z M18,8l2,0 0,2 -2,0 0,-2z M20,8l2,0 0,2 -2,0 0,-2z M24,8l2,0 0,2 -2,0 0,-2z M26,8l2,0 0,2 -2,0 0,-2z M28,8l2,0 0,2 -2,0 0,-2z M30,8l2,0 0,2 -2,0 0,-2z M34,8l2,0 0,2 -2,0 0,-2z M36,8l2,0 0,2 -2,0 0,-2z M42,8l2,0 0,2 -2,0 0,-2z M44,8l2,0 0,2 -2,0 0,-2z M52,8l2,0 0,2 -2,0 0,-2z M54,8l2,0 0,2 -2,0 0,-2z M56,8l2,0 0,2 -2,0 0,-2z M58,8l2,0 0,2 -2,0 0,-2z M60,8l2,0 0,2 -2,0 0,-2z M62,8l2,0 0,2 -2,0 0,-2z M64,8l2,0 0,2 -2,0 0,-2z M8,10l2,0 0,2 -2,0 0,-2z M20,10l2,0 0,2 -2,0 0,-2z M30,10l2,0 0,2 -2,0 0,-2z M32,10l2,0 0,2 -2,0 0,-2z M36,10l2,0 0,2 -2,0 0,-2z M40,10l2,0 0,2 -2,0 0,-2z M42,10l2,0 0,2 -2,0 0,-2z M44,10l2,0 0,2 -2,0 0,-2z M46,10l2,0 0,2 -2,0 0,-2z M48,10l2,0 0,2 -2,0 0,-2z M52,10l2,0 0,2 -2,0 0,-2z M64,10l2,0 0,2 -2,0 0,-2z M8,12l2,0 0,2 -2,0 0,-2z M12,12l2,0 0,2 -2,0 0,-2z M14,12l2,0 0,2 -2,0 0,-2z M16,12l2,0 0,2 -2,0 0,-2z M20,12l2,0 0,2 -2,0 0,-2z M26,12l2,0 0,2 -2,0 0,-2z M30,12l2,0 0,2 -2,0 0,-2z M34,12l2,0 0,2 -2,0 0,-2z M36,12l2,0 0,2 -2,0 0,-2z M38,12l2,0 0,2 -2,0 0,-2z M40,12l2,0 0,2 -2,0 0,-2z M52,12l2,0 0,2 -2,0 0,-2z M56,12l2,0 0,2 -2,0 0,-2z M58,12l2,0 0,2 -2,0 0,-2z M60,12l2,0 0,2 -2,0 0,-2z M64,12l2,0 0,2 -2,0 0,-2z M8,14l2,0 0,2 -2,0 0,-2z M12,14l2,0 0,2 -2,0 0,-2z M14,14l2,0 0,2 -2,0 0,-2z M16,14l2,0 0,2 -2,0 0,-2z M20,14l2,0 0,2 -2,0 0,-2z M28,14l2,0 0,2 -2,0 0,-2z M30,14l2,0 0,2 -2,0 0,-2z M32,14l2,0 0,2 -2,0 0,-2z M34,14l2,0 0,2 -2,0 0,-2z M40,14l2,0 0,2 -2,0 0,-2z M52,14l2,0 0,2 -2,0 0,-2z M56,14l2,0 0,2 -2,0 0,-2z M58,14l2,0 0,2 -2,0 0,-2z M60,14l2,0 0,2 -2,0 0,-2z M64,14l2,0 0,2 -2,0 0,-2z M8,16l2,0 0,2 -2,0 0,-2z M12,16l2,0 0,2 -2,0 0,-2z M14,16l2,0 0,2 -2,0 0,-2z M16,16l2,0 0,2 -2,0 0,-2z M20,16l2,0 0,2 -2,0 0,-2z M28,16l2,0 0,2 -2,0 0,-2z M30,16l2,0 0,2 -2,0 0,-2z M32,16l2,0 0,2 -2,0 0,-2z M36,16l2,0 0,2 -2,0 0,-2z M40,16l2,0 0,2 -2,0 0,-2z M44,16l2,0 0,2 -2,0 0,-2z M46,16l2,0 0,2 -2,0 0,-2z M52,16l2,0 0,2 -2,0 0,-2z M56,16l2,0 0,2 -2,0 0,-2z M58,16l2,0 0,2 -2,0 0,-2z M60,16l2,0 0,2 -2,0 0,-2z M64,16l2,0 0,2 -2,0 0,-2z M8,18l2,0 0,2 -2,0 0,-2z M20,18l2,0 0,2 -2,0 0,-2z M26,18l2,0 0,2 -2,0 0,-2z M30,18l2,0 0,2 -2,0 0,-2z M32,18l2,0 0,2 -2,0 0,-2z M34,18l2,0 0,2 -2,0 0,-2z M42,18l2,0 0,2 -2,0 0,-2z M48,18l2,0 0,2 -2,0 0,-2z M52,18l2,0 0,2 -2,0 0,-2z M64,18l2,0 0,2 -2,0 0,-2z M8,20l2,0 0,2 -2,0 0,-2z M10,20l2,0 0,2 -2,0 0,-2z M12,20l2,0 0,2 -2,0 0,-2z M14,20l2,0 0,2 -2,0 0,-2z M16,20l2,0 0,2 -2,0 0,-2z M18,20l2,0 0,2 -2,0 0,-2z M20,20l2,0 0,2 -2,0 0,-2z M24,20l2,0 0,2 -2,0 0,-2z M28,20l2,0 0,2 -2,0 0,-2z M32,20l2,0 0,2 -2,0 0,-2z M36,20l2,0 0,2 -2,0 0,-2z M40,20l2,0 0,2 -2,0 0,-2z M44,20l2,0 0,2 -2,0 0,-2z M48,20l2,0 0,2 -2,0 0,-2z M52,20l2,0 0,2 -2,0 0,-2z M54,20l2,0 0,2 -2,0 0,-2z M56,20l2,0 0,2 -2,0 0,-2z M58,20l2,0 0,2 -2,0 0,-2z M60,20l2,0 0,2 -2,0 0,-2z M62,20l2,0 0,2 -2,0 0,-2z M64,20l2,0 0,2 -2,0 0,-2z M24,22l2,0 0,2 -2,0 0,-2z M26,22l2,0 0,2 -2,0 0,-2z M32,22l2,0 0,2 -2,0 0,-2z M34,22l2,0 0,2 -2,0 0,-2z M40,22l2,0 0,2 -2,0 0,-2z M44,22l2,0 0,2 -2,0 0,-2z M46,22l2,0 0,2 -2,0 0,-2z M48,22l2,0 0,2 -2,0 0,-2z M8,24l2,0 0,2 -2,0 0,-2z M10,24l2,0 0,2 -2,0 0,-2z M14,24l2,0 0,2 -2,0 0,-2z M16,24l2,0 0,2 -2,0 0,-2z M20,24l2,0 0,2 -2,0 0,-2z M26,24l2,0 0,2 -2,0 0,-2z M36,24l2,0 0,2 -2,0 0,-2z M40,24l2,0 0,2 -2,0 0,-2z M42,24l2,0 0,2 -2,0 0,-2z M46,24l2,0 0,2 -2,0 0,-2z M52,24l2,0 0,2 -2,0 0,-2z M64,24l2,0 0,2 -2,0 0,-2z M8,26l2,0 0,2 -2,0 0,-2z M10,26l2,0 0,2 -2,0 0,-2z M12,26l2,0 0,2 -2,0 0,-2z M18,26l2,0 0,2 -2,0 0,-2z M24,26l2,0 0,2 -2,0 0,-2z M28,26l2,0 0,2 -2,0 0,-2z M30,26l2,0 0,2 -2,0 0,-2z M32,26l2,0 0,2 -2,0 0,-2z M34,26l2,0 0,2 -2,0 0,-2z M36,26l2,0 0,2 -2,0 0,-2z M38,26l2,0 0,2 -2,0 0,-2z M40,26l2,0 0,2 -2,0 0,-2z M42,26l2,0 0,2 -2,0 0,-2z M44,26l2,0 0,2 -2,0 0,-2z M46,26l2,0 0,2 -2,0 0,-2z M50,26l2,0 0,2 -2,0 0,-2z M54,26l2,0 0,2 -2,0 0,-2z M56,26l2,0 0,2 -2,0 0,-2z M60,26l2,0 0,2 -2,0 0,-2z M62,26l2,0 0,2 -2,0 0,-2z M8,28l2,0 0,2 -2,0 0,-2z M16,28l2,0 0,2 -2,0 0,-2z M18,28l2,0 0,2 -2,0 0,-2z M20,28l2,0 0,2 -2,0 0,-2z M26,28l2,0 0,2 -2,0 0,-2z M30,28l2,0 0,2 -2,0 0,-2z M32,28l2,0 0,2 -2,0 0,-2z M34,28l2,0 0,2 -2,0 0,-2z M38,28l2,0 0,2 -2,0 0,-2z M54,28l2,0 0,2 -2,0 0,-2z M56,28l2,0 0,2 -2,0 0,-2z M60,28l2,0 0,2 -2,0 0,-2z M10,30l2,0 0,2 -2,0 0,-2z M14,30l2,0 0,2 -2,0 0,-2z M18,30l2,0 0,2 -2,0 0,-2z M24,30l2,0 0,2 -2,0 0,-2z M32,30l2,0 0,2 -2,0 0,-2z M36,30l2,0 0,2 -2,0 0,-2z M42,30l2,0 0,2 -2,0 0,-2z M48,30l2,0 0,2 -2,0 0,-2z M50,30l2,0 0,2 -2,0 0,-2z M52,30l2,0 0,2 -2,0 0,-2z M54,30l2,0 0,2 -2,0 0,-2z M58,30l2,0 0,2 -2,0 0,-2z M64,30l2,0 0,2 -2,0 0,-2z M10,32l2,0 0,2 -2,0 0,-2z M12,32l2,0 0,2 -2,0 0,-2z M16,32l2,0 0,2 -2,0 0,-2z M18,32l2,0 0,2 -2,0 0,-2z M20,32l2,0 0,2 -2,0 0,-2z M26,32l2,0 0,2 -2,0 0,-2z M28,32l2,0 0,2 -2,0 0,-2z M30,32l2,0 0,2 -2,0 0,-2z M40,32l2,0 0,2 -2,0 0,-2z M48,32l2,0 0,2 -2,0 0,-2z M52,32l2,0 0,2 -2,0 0,-2z M54,32l2,0 0,2 -2,0 0,-2z M64,32l2,0 0,2 -2,0 0,-2z M14,34l2,0 0,2 -2,0 0,-2z M16,34l2,0 0,2 -2,0 0,-2z M22,34l2,0 0,2 -2,0 0,-2z M24,34l2,0 0,2 -2,0 0,-2z M28,34l2,0 0,2 -2,0 0,-2z M30,34l2,0 0,2 -2,0 0,-2z M32,34l2,0 0,2 -2,0 0,-2z M34,34l2,0 0,2 -2,0 0,-2z M38,34l2,0 0,2 -2,0 0,-2z M40,34l2,0 0,2 -2,0 0,-2z M46,34l2,0 0,2 -2,0 0,-2z M52,34l2,0 0,2 -2,0 0,-2z M54,34l2,0 0,2 -2,0 0,-2z M56,34l2,0 0,2 -2,0 0,-2z M58,34l2,0 0,2 -2,0 0,-2z M60,34l2,0 0,2 -2,0 0,-2z M62,34l2,0 0,2 -2,0 0,-2z M64,34l2,0 0,2 -2,0 0,-2z M8,36l2,0 0,2 -2,0 0,-2z M12,36l2,0 0,2 -2,0 0,-2z M14,36l2,0 0,2 -2,0 0,-2z M16,36l2,0 0,2 -2,0 0,-2z M20,36l2,0 0,2 -2,0 0,-2z M22,36l2,0 0,2 -2,0 0,-2z M24,36l2,0 0,2 -2,0 0,-2z M26,36l2,0 0,2 -2,0 0,-2z M32,36l2,0 0,2 -2,0 0,-2z M38,36l2,0 0,2 -2,0 0,-2z M40,36l2,0 0,2 -2,0 0,-2z M46,36l2,0 0,2 -2,0 0,-2z M48,36l2,0 0,2 -2,0 0,-2z M50,36l2,0 0,2 -2,0 0,-2z M52,36l2,0 0,2 -2,0 0,-2z M56,36l2,0 0,2 -2,0 0,-2z M60,36l2,0 0,2 -2,0 0,-2z M64,36l2,0 0,2 -2,0 0,-2z M8,38l2,0 0,2 -2,0 0,-2z M10,38l2,0 0,2 -2,0 0,-2z M22,38l2,0 0,2 -2,0 0,-2z M24,38l2,0 0,2 -2,0 0,-2z M28,38l2,0 0,2 -2,0 0,-2z M30,38l2,0 0,2 -2,0 0,-2z M36,38l2,0 0,2 -2,0 0,-2z M38,38l2,0 0,2 -2,0 0,-2z M40,38l2,0 0,2 -2,0 0,-2z M46,38l2,0 0,2 -2,0 0,-2z M54,38l2,0 0,2 -2,0 0,-2z M56,38l2,0 0,2 -2,0 0,-2z M60,38l2,0 0,2 -2,0 0,-2z M64,38l2,0 0,2 -2,0 0,-2z M8,40l2,0 0,2 -2,0 0,-2z M10,40l2,0 0,2 -2,0 0,-2z M16,40l2,0 0,2 -2,0 0,-2z M20,40l2,0 0,2 -2,0 0,-2z M24,40l2,0 0,2 -2,0 0,-2z M26,40l2,0 0,2 -2,0 0,-2z M28,40l2,0 0,2 -2,0 0,-2z M30,40l2,0 0,2 -2,0 0,-2z M34,40l2,0 0,2 -2,0 0,-2z M36,40l2,0 0,2 -2,0 0,-2z M38,40l2,0 0,2 -2,0 0,-2z M46,40l2,0 0,2 -2,0 0,-2z M48,40l2,0 0,2 -2,0 0,-2z M50,40l2,0 0,2 -2,0 0,-2z M58,40l2,0 0,2 -2,0 0,-2z M8,42l2,0 0,2 -2,0 0,-2z M10,42l2,0 0,2 -2,0 0,-2z M18,42l2,0 0,2 -2,0 0,-2z M22,42l2,0 0,2 -2,0 0,-2z M26,42l2,0 0,2 -2,0 0,-2z M28,42l2,0 0,2 -2,0 0,-2z M32,42l2,0 0,2 -2,0 0,-2z M34,42l2,0 0,2 -2,0 0,-2z M38,42l2,0 0,2 -2,0 0,-2z M42,42l2,0 0,2 -2,0 0,-2z M46,42l2,0 0,2 -2,0 0,-2z M56,42l2,0 0,2 -2,0 0,-2z M60,42l2,0 0,2 -2,0 0,-2z M62,42l2,0 0,2 -2,0 0,-2z M8,44l2,0 0,2 -2,0 0,-2z M10,44l2,0 0,2 -2,0 0,-2z M12,44l2,0 0,2 -2,0 0,-2z M14,44l2,0 0,2 -2,0 0,-2z M16,44l2,0 0,2 -2,0 0,-2z M20,44l2,0 0,2 -2,0 0,-2z M22,44l2,0 0,2 -2,0 0,-2z M26,44l2,0 0,2 -2,0 0,-2z M30,44l2,0 0,2 -2,0 0,-2z M32,44l2,0 0,2 -2,0 0,-2z M34,44l2,0 0,2 -2,0 0,-2z M38,44l2,0 0,2 -2,0 0,-2z M40,44l2,0 0,2 -2,0 0,-2z M42,44l2,0 0,2 -2,0 0,-2z M44,44l2,0 0,2 -2,0 0,-2z M46,44l2,0 0,2 -2,0 0,-2z M56,44l2,0 0,2 -2,0 0,-2z M58,44l2,0 0,2 -2,0 0,-2z M64,44l2,0 0,2 -2,0 0,-2z M8,46l2,0 0,2 -2,0 0,-2z M10,46l2,0 0,2 -2,0 0,-2z M12,46l2,0 0,2 -2,0 0,-2z M14,46l2,0 0,2 -2,0 0,-2z M22,46l2,0 0,2 -2,0 0,-2z M28,46l2,0 0,2 -2,0 0,-2z M32,46l2,0 0,2 -2,0 0,-2z M34,46l2,0 0,2 -2,0 0,-2z M38,46l2,0 0,2 -2,0 0,-2z M44,46l2,0 0,2 -2,0 0,-2z M46,46l2,0 0,2 -2,0 0,-2z M52,46l2,0 0,2 -2,0 0,-2z M58,46l2,0 0,2 -2,0 0,-2z M60,46l2,0 0,2 -2,0 0,-2z M8,48l2,0 0,2 -2,0 0,-2z M10,48l2,0 0,2 -2,0 0,-2z M12,48l2,0 0,2 -2,0 0,-2z M14,48l2,0 0,2 -2,0 0,-2z M18,48l2,0 0,2 -2,0 0,-2z M20,48l2,0 0,2 -2,0 0,-2z M22,48l2,0 0,2 -2,0 0,-2z M28,48l2,0 0,2 -2,0 0,-2z M38,48l2,0 0,2 -2,0 0,-2z M40,48l2,0 0,2 -2,0 0,-2z M42,48l2,0 0,2 -2,0 0,-2z M48,48l2,0 0,2 -2,0 0,-2z M50,48l2,0 0,2 -2,0 0,-2z M52,48l2,0 0,2 -2,0 0,-2z M54,48l2,0 0,2 -2,0 0,-2z M56,48l2,0 0,2 -2,0 0,-2z M58,48l2,0 0,2 -2,0 0,-2z M60,48l2,0 0,2 -2,0 0,-2z M62,48l2,0 0,2 -2,0 0,-2z M24,50l2,0 0,2 -2,0 0,-2z M28,50l2,0 0,2 -2,0 0,-2z M30,50l2,0 0,2 -2,0 0,-2z M32,50l2,0 0,2 -2,0 0,-2z M38,50l2,0 0,2 -2,0 0,-2z M42,50l2,0 0,2 -2,0 0,-2z M44,50l2,0 0,2 -2,0 0,-2z M48,50l2,0 0,2 -2,0 0,-2z M56,50l2,0 0,2 -2,0 0,-2z M58,50l2,0 0,2 -2,0 0,-2z M8,52l2,0 0,2 -2,0 0,-2z M10,52l2,0 0,2 -2,0 0,-2z M12,52l2,0 0,2 -2,0 0,-2z M14,52l2,0 0,2 -2,0 0,-2z M16,52l2,0 0,2 -2,0 0,-2z M18,52l2,0 0,2 -2,0 0,-2z M20,52l2,0 0,2 -2,0 0,-2z M26,52l2,0 0,2 -2,0 0,-2z M30,52l2,0 0,2 -2,0 0,-2z M34,52l2,0 0,2 -2,0 0,-2z M36,52l2,0 0,2 -2,0 0,-2z M38,52l2,0 0,2 -2,0 0,-2z M40,52l2,0 0,2 -2,0 0,-2z M42,52l2,0 0,2 -2,0 0,-2z M44,52l2,0 0,2 -2,0 0,-2z M46,52l2,0 0,2 -2,0 0,-2z M48,52l2,0 0,2 -2,0 0,-2z M52,52l2,0 0,2 -2,0 0,-2z M56,52l2,0 0,2 -2,0 0,-2z M58,52l2,0 0,2 -2,0 0,-2z M8,54l2,0 0,2 -2,0 0,-2z M20,54l2,0 0,2 -2,0 0,-2z M26,54l2,0 0,2 -2,0 0,-2z M28,54l2,0 0,2 -2,0 0,-2z M30,54l2,0 0,2 -2,0 0,-2z M32,54l2,0 0,2 -2,0 0,-2z M38,54l2,0 0,2 -2,0 0,-2z M42,54l2,0 0,2 -2,0 0,-2z M46,54l2,0 0,2 -2,0 0,-2z M48,54l2,0 0,2 -2,0 0,-2z M56,54l2,0 0,2 -2,0 0,-2z M62,54l2,0 0,2 -2,0 0,-2z M64,54l2,0 0,2 -2,0 0,-2z M8,56l2,0 0,2 -2,0 0,-2z M12,56l2,0 0,2 -2,0 0,-2z M14,56l2,0 0,2 -2,0 0,-2z M16,56l2,0 0,2 -2,0 0,-2z M20,56l2,0 0,2 -2,0 0,-2z M24,56l2,0 0,2 -2,0 0,-2z M36,56l2,0 0,2 -2,0 0,-2z M40,56l2,0 0,2 -2,0 0,-2z M46,56l2,0 0,2 -2,0 0,-2z M48,56l2,0 0,2 -2,0 0,-2z M50,56l2,0 0,2 -2,0 0,-2z M52,56l2,0 0,2 -2,0 0,-2z M54,56l2,0 0,2 -2,0 0,-2z M56,56l2,0 0,2 -2,0 0,-2z M58,56l2,0 0,2 -2,0 0,-2z M62,56l2,0 0,2 -2,0 0,-2z M64,56l2,0 0,2 -2,0 0,-2z M8,58l2,0 0,2 -2,0 0,-2z M12,58l2,0 0,2 -2,0 0,-2z M14,58l2,0 0,2 -2,0 0,-2z M16,58l2,0 0,2 -2,0 0,-2z M20,58l2,0 0,2 -2,0 0,-2z M24,58l2,0 0,2 -2,0 0,-2z M30,58l2,0 0,2 -2,0 0,-2z M32,58l2,0 0,2 -2,0 0,-2z M34,58l2,0 0,2 -2,0 0,-2z M38,58l2,0 0,2 -2,0 0,-2z M44,58l2,0 0,2 -2,0 0,-2z M50,58l2,0 0,2 -2,0 0,-2z M62,58l2,0 0,2 -2,0 0,-2z M64,58l2,0 0,2 -2,0 0,-2z M8,60l2,0 0,2 -2,0 0,-2z M12,60l2,0 0,2 -2,0 0,-2z M14,60l2,0 0,2 -2,0 0,-2z M16,60l2,0 0,2 -2,0 0,-2z M20,60l2,0 0,2 -2,0 0,-2z M28,60l2,0 0,2 -2,0 0,-2z M34,60l2,0 0,2 -2,0 0,-2z M38,60l2,0 0,2 -2,0 0,-2z M44,60l2,0 0,2 -2,0 0,-2z M48,60l2,0 0,2 -2,0 0,-2z M50,60l2,0 0,2 -2,0 0,-2z M54,60l2,0 0,2 -2,0 0,-2z M56,60l2,0 0,2 -2,0 0,-2z M60,60l2,0 0,2 -2,0 0,-2z M62,60l2,0 0,2 -2,0 0,-2z M64,60l2,0 0,2 -2,0 0,-2z M8,62l2,0 0,2 -2,0 0,-2z M20,62l2,0 0,2 -2,0 0,-2z M24,62l2,0 0,2 -2,0 0,-2z M32,62l2,0 0,2 -2,0 0,-2z M36,62l2,0 0,2 -2,0 0,-2z M38,62l2,0 0,2 -2,0 0,-2z M40,62l2,0 0,2 -2,0 0,-2z M52,62l2,0 0,2 -2,0 0,-2z M54,62l2,0 0,2 -2,0 0,-2z M58,62l2,0 0,2 -2,0 0,-2z M60,62l2,0 0,2 -2,0 0,-2z M64,62l2,0 0,2 -2,0 0,-2z M8,64l2,0 0,2 -2,0 0,-2z M10,64l2,0 0,2 -2,0 0,-2z M12,64l2,0 0,2 -2,0 0,-2z M14,64l2,0 0,2 -2,0 0,-2z M16,64l2,0 0,2 -2,0 0,-2z M18,64l2,0 0,2 -2,0 0,-2z M20,64l2,0 0,2 -2,0 0,-2z M24,64l2,0 0,2 -2,0 0,-2z M28,64l2,0 0,2 -2,0 0,-2z M30,64l2,0 0,2 -2,0 0,-2z M34,64l2,0 0,2 -2,0 0,-2z M36,64l2,0 0,2 -2,0 0,-2z M38,64l2,0 0,2 -2,0 0,-2z M40,64l2,0 0,2 -2,0 0,-2z M46,64l2,0 0,2 -2,0 0,-2z M48,64l2,0 0,2 -2,0 0,-2z M52,64l2,0 0,2 -2,0 0,-2z M56,64l2,0 0,2 -2,0 0,-2z ",stroke:"transparent",fill:"black"})),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,"Marc Loupias, BBL AccorHotels du 20/06/2019"))],u=[0],o=[0],s=[{}],p={},k="wrapper";function m(e){let{components:t,...l}=e;return(0,a.kt)(k,i({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Intégration Continue"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Une intégration continue ou de l'intégration continue ?")),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'"There are only two hard things in Computer Science: cache invalidation and naming things", Phil Karlton\n')),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("p",null,"Marc Loupias, BBL AccorHotels du 20/06/2019"))}m.isMDXComponent=!0},2140:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>u,default:()=>m,fragmentSteps:()=>o,fusumaProps:()=>s,slides:()=>r});var n=l(7401),a=l(9332);l(108);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},i.apply(this,arguments)}const r=[e=>(0,a.kt)(n.Fragment,null,(0,a.kt)("h2",null,"Contenu"))],u=[0],o=[0],s=[{contents:"true"}],p={},k="wrapper";function m(e){let{components:t,...l}=e;return(0,a.kt)(k,i({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",null,"Contenu"))}m.isMDXComponent=!0},6109:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Quiproquo ?")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."),(0,i.kt)("li",{parentName:"ul"},"Version cloud : TravisCI, CircleCI, ..."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."),(0,i.kt)("li",{parentName:"ul"},"Version cloud : TravisCI, CircleCI, ...")),(0,i.kt)("br",null),(0,i.kt)("p",null,"L'intégration continue désigne une pratique.")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."),(0,i.kt)("li",{parentName:"ul"},"Version cloud : TravisCI, CircleCI, ...")),(0,i.kt)("br",null),(0,i.kt)("p",null,"L'intégration continue désigne ",(0,i.kt)("strong",{parentName:"p"},"une pratique"),"."))],o=[0,0,0,0,0,0],s=[0,0,0,0,0,0],p=[{},{},{},{},{},{}],k={},m="wrapper";function d(e){let{components:t,...l}=e;return(0,i.kt)(m,r({},k,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Quiproquo ?"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ...")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."),(0,i.kt)("li",{parentName:"ul"},"Version cloud : TravisCI, CircleCI, ...")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."),(0,i.kt)("li",{parentName:"ul"},"Version cloud : TravisCI, CircleCI, ...")),(0,i.kt)("br",null),(0,i.kt)("p",null,"L'intégration continue désigne une pratique."),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Quiproquo ?",mdxType:"Header"}),(0,i.kt)("p",null,"Une intégration continue désigne un outil :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jenkins, TeamCity, ..."),(0,i.kt)("li",{parentName:"ul"},"Version cloud : TravisCI, CircleCI, ...")),(0,i.kt)("br",null),(0,i.kt)("p",null,"L'intégration continue désigne ",(0,i.kt)("strong",{parentName:"p"},"une pratique"),"."))}d.isMDXComponent=!0},7390:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Origine")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Origine",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Selon les sources :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Grady Booch dans Object Oriented Design: With Applications (1991)"),(0,i.kt)("li",{parentName:"ul"},"Kent Beck dans Extreme Programming Explained (1999)"),(0,i.kt)("li",{parentName:"ul"},"..."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Origine",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Vient de l'Extreme Programming :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"frequents releases"),(0,i.kt)("li",{parentName:"ul"},"code review"),(0,i.kt)("li",{parentName:"ul"},"pair programming"),(0,i.kt)("li",{parentName:"ul"},"TDD"),(0,i.kt)("li",{parentName:"ul"},"..."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Origine",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("p",null,"Influence fortement Agile Manifesto (2001)."),(0,i.kt)("p",null,"Kent Beck fait parti des auteurs avec Martin Fowler, Oncle Bob, Ward Cunningham, etc ..."))],o=[0,0,0,0],s=[0,0,0,0],p=[{},{},{},{}],k={},m="wrapper";function d(e){let{components:t,...l}=e;return(0,i.kt)(m,r({},k,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Origine"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Origine",mdxType:"Header"}),(0,i.kt)("p",null,"Selon les sources :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Grady Booch dans Object Oriented Design: With Applications (1991)"),(0,i.kt)("li",{parentName:"ul"},"Kent Beck dans Extreme Programming Explained (1999)"),(0,i.kt)("li",{parentName:"ul"},"...")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Origine",mdxType:"Header"}),(0,i.kt)("p",null,"Vient de l'Extreme Programming :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"frequents releases"),(0,i.kt)("li",{parentName:"ul"},"code review"),(0,i.kt)("li",{parentName:"ul"},"pair programming"),(0,i.kt)("li",{parentName:"ul"},"TDD"),(0,i.kt)("li",{parentName:"ul"},"...")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Origine",mdxType:"Header"}),(0,i.kt)("p",null,"Influence fortement Agile Manifesto (2001)."),(0,i.kt)("p",null,"Kent Beck fait parti des auteurs avec Martin Fowler, Oncle Bob, Ward Cunningham, etc ..."))}d.isMDXComponent=!0},339:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108),l(4780);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Définitions")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Continuous Integration (CI) is a development practice that requires developers\nto integrate code into a shared repository several times a day.\n\nEach check-in is then verified by an automated build,\nallowing teams to detect problems early.\n")),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.thoughtworks.com/continuous-integration"},"www.thoughtworks.com"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(8895),alt:"Growing vs Building",className:"img-50"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("p",null,"C'est la mise en oeuvre connue la plus proche de l'idée qu'un logiciel ne se construit pas, il se grandit.")))),(0,i.kt)("br",null),(0,i.kt)("p",null,"cf: Brooks, Frederick P., ",(0,i.kt)("a",{parentName:"p",href:"http://www.cs.nott.ac.uk/~pszcah/G51ISS/Documents/NoSilverBullet.html"},'"No Silver Bullet: Essence and Accidents of Software Engineering,"')," Computer, Vol. 20, No. 4 (April 1987) pp. 10-19.")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("div",{className:"content-center"},(0,i.kt)("ul",{className:"flexblock specs"},(0,i.kt)("li",null,(0,i.kt)("blockquote",{className:"text-quote"},"You should be able to walk up to the project with a virgin machine, do a checkout, and be able to fully build the system.")),(0,i.kt)("li",null,(0,i.kt)("blockquote",{className:"text-quote"},"Continuous Integration assumes a high degree of tests which are automated into the software.")),(0,i.kt)("li",null,(0,i.kt)("blockquote",{className:"text-quote"},"You must put everything required for a build in the source control system."))))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Traduit pour le monde JavaScript :"),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/robert/killer-app.git && cd killer-app/\n$ npm ci\n$ npm build\n$ npm start\n$ npm test\n")),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"npm ci")," utilise strictement le ",(0,i.kt)("inlineCode",{parentName:"li"},"package-lock.json")," (",(0,i.kt)("inlineCode",{parentName:"li"},"npm >= 5.7"),")."),(0,i.kt)("li",{parentName:"ul"},"les tests unitaires (uniquement) peuvent être exécutés avant le build."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Etapes :"),(0,i.kt)("br",null),(0,i.kt)("ul",{className:"flexblock steps"},(0,i.kt)("li",null,(0,i.kt)("h2",null,"commit"),(0,i.kt)("p",null,"écrire une révision en local")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-2"}),(0,i.kt)("h2",null,"build"),(0,i.kt)("p",null,"build un livrable en local et exécuter tous les tests")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-3"}),(0,i.kt)("h2",null,"pull master"),(0,i.kt)("p",null,"tirer les modifs des autres devs du trunk et rejouer build + tests"))),(0,i.kt)("br",null),(0,i.kt)("ul",{className:"flexblock steps"},(0,i.kt)("li",null,(0,i.kt)("h2",null,"push trigger CI"),(0,i.kt)("p",null,"pousser ce qui trigger l'outil de CI qui fait de son côté build + tests")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-2"}),(0,i.kt)("h2",null,"merge dans le trunk"),(0,i.kt)("p",null,"si job OK alors la révision est mergée.")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-3"}),(0,i.kt)("h2",null,"deploy"),(0,i.kt)("p",null,"La révision peut être déployée dans un environnement"))),(0,i.kt)("br",null),(0,i.kt)("p",null,"Ces étapes sont répétées plusieurs fois ",(0,i.kt)("strong",{parentName:"p"},"par jour")," pour chaque développeur.")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Quels impacts sur la gestion du code source ?")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Quels impacts sur la gestion du code source ?"),(0,i.kt)("br",null),(0,i.kt)("p",null,"On va parler Git."),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Comment intégrer les contributions ?")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Comment organiser l'intégration des contributions ?")))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h4",null,"Comment intégrer les contributions ?"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Avec une ",(0,i.kt)("strong",{parentName:"p"},"branche d'intégration"),"."),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Via une opération de fusion (",(0,i.kt)("inlineCode",{parentName:"li"},"merge"),") de la branche de travail vers la branche d'intégration."),(0,i.kt)("li",{parentName:"ul"},'La branche d\'intégration est désignée sous le terme de "trunk" (tronc) sous SVN.'),(0,i.kt)("li",{parentName:"ul"},"Sous Git elle est nommée par défaut ",(0,i.kt)("inlineCode",{parentName:"li"},"master"),", parfois ",(0,i.kt)("inlineCode",{parentName:"li"},"develop")," selon le workflow utilisé."),(0,i.kt)("li",{parentName:"ul"},"C'est le tronc de l'arbre des commits."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h4",null,"Comment organiser l'intégration des contributions ?"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Avec un ",(0,i.kt)("strong",{parentName:"p"},"workflow"),"."),(0,i.kt)("br",null),(0,i.kt)("p",null,"Les plus courants :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Le feature branching à la papa (GitFlow)"),(0,i.kt)("li",{parentName:"ul"},"Continuous Integration Oriented (trunk-based dev)"),(0,i.kt)("li",{parentName:"ul"},"Continuous Delivery Oriented (GitHub/GitLab Flow)")))],o=[0,0,0,0,0,0,0,0,0,0],s=[0,0,0,0,0,0,0,0,0,0],p=[{},{},{},{},{},{},{},{},{},{}],k={},m="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(m,r({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Définitions"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Continuous Integration (CI) is a development practice that requires developers\nto integrate code into a shared repository several times a day.\n\nEach check-in is then verified by an automated build,\nallowing teams to detect problems early.\n")),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.thoughtworks.com/continuous-integration"},"www.thoughtworks.com")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(8895),alt:"Growing vs Building",className:"img-50"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("p",null,"C'est la mise en oeuvre connue la plus proche de l'idée qu'un logiciel ne se construit pas, il se grandit.")))),(0,i.kt)("br",null),(0,i.kt)("p",null,"cf: Brooks, Frederick P., ",(0,i.kt)("a",{parentName:"p",href:"http://www.cs.nott.ac.uk/~pszcah/G51ISS/Documents/NoSilverBullet.html"},'"No Silver Bullet: Essence and Accidents of Software Engineering,"')," Computer, Vol. 20, No. 4 (April 1987) pp. 10-19."),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("div",{className:"content-center"},(0,i.kt)("ul",{className:"flexblock specs"},(0,i.kt)("li",null,(0,i.kt)("blockquote",{className:"text-quote"},"You should be able to walk up to the project with a virgin machine, do a checkout, and be able to fully build the system.")),(0,i.kt)("li",null,(0,i.kt)("blockquote",{className:"text-quote"},"Continuous Integration assumes a high degree of tests which are automated into the software.")),(0,i.kt)("li",null,(0,i.kt)("blockquote",{className:"text-quote"},"You must put everything required for a build in the source control system.")))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Traduit pour le monde JavaScript :"),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/robert/killer-app.git && cd killer-app/\n$ npm ci\n$ npm build\n$ npm start\n$ npm test\n")),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"npm ci")," utilise strictement le ",(0,i.kt)("inlineCode",{parentName:"li"},"package-lock.json")," (",(0,i.kt)("inlineCode",{parentName:"li"},"npm >= 5.7"),")."),(0,i.kt)("li",{parentName:"ul"},"les tests unitaires (uniquement) peuvent être exécutés avant le build.")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h3",null,"Etapes :"),(0,i.kt)("br",null),(0,i.kt)("ul",{className:"flexblock steps"},(0,i.kt)("li",null,(0,i.kt)("h2",null,"commit"),(0,i.kt)("p",null,"écrire une révision en local")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-2"}),(0,i.kt)("h2",null,"build"),(0,i.kt)("p",null,"build un livrable en local et exécuter tous les tests")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-3"}),(0,i.kt)("h2",null,"pull master"),(0,i.kt)("p",null,"tirer les modifs des autres devs du trunk et rejouer build + tests"))),(0,i.kt)("br",null),(0,i.kt)("ul",{className:"flexblock steps"},(0,i.kt)("li",null,(0,i.kt)("h2",null,"push trigger CI"),(0,i.kt)("p",null,"pousser ce qui trigger l'outil de CI qui fait de son côté build + tests")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-2"}),(0,i.kt)("h2",null,"merge dans le trunk"),(0,i.kt)("p",null,"si job OK alors la révision est mergée.")),(0,i.kt)("li",null,(0,i.kt)("div",{className:"process step-3"}),(0,i.kt)("h2",null,"deploy"),(0,i.kt)("p",null,"La révision peut être déployée dans un environnement"))),(0,i.kt)("br",null),(0,i.kt)("p",null,"Ces étapes sont répétées plusieurs fois ",(0,i.kt)("strong",{parentName:"p"},"par jour")," pour chaque développeur."),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h3",null,"Quels impacts sur la gestion du code source ?"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h3",null,"Quels impacts sur la gestion du code source ?"),(0,i.kt)("br",null),(0,i.kt)("p",null,"On va parler Git."),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Comment intégrer les contributions ?")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Comment organiser l'intégration des contributions ?"))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h4",null,"Comment intégrer les contributions ?"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Avec une ",(0,i.kt)("strong",{parentName:"p"},"branche d'intégration"),"."),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Via une opération de fusion (",(0,i.kt)("inlineCode",{parentName:"li"},"merge"),") de la branche de travail vers la branche d'intégration."),(0,i.kt)("li",{parentName:"ul"},'La branche d\'intégration est désignée sous le terme de "trunk" (tronc) sous SVN.'),(0,i.kt)("li",{parentName:"ul"},"Sous Git elle est nommée par défaut ",(0,i.kt)("inlineCode",{parentName:"li"},"master"),", parfois ",(0,i.kt)("inlineCode",{parentName:"li"},"develop")," selon le workflow utilisé."),(0,i.kt)("li",{parentName:"ul"},"C'est le tronc de l'arbre des commits.")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Définitions",mdxType:"Header"}),(0,i.kt)("h4",null,"Comment organiser l'intégration des contributions ?"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Avec un ",(0,i.kt)("strong",{parentName:"p"},"workflow"),"."),(0,i.kt)("br",null),(0,i.kt)("p",null,"Les plus courants :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Le feature branching à la papa (GitFlow)"),(0,i.kt)("li",{parentName:"ul"},"Continuous Integration Oriented (trunk-based dev)"),(0,i.kt)("li",{parentName:"ul"},"Continuous Delivery Oriented (GitHub/GitLab Flow)")))}d.isMDXComponent=!0},4227:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Feature Branching (GitFlow)")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Principes de base"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://nvie.com/posts/a-successful-git-branching-model/"},"GitFlow")),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(4993),alt:"GitFlow",className:"img-33"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("ul",{className:"flexblock specs"},(0,i.kt)("li",null,(0,i.kt)("p",null,"1 branche ",(0,i.kt)("code",null,"=")," 1 feature")),(0,i.kt)("li",null,(0,i.kt)("p",null,"la branche de collaboration est ",(0,i.kt)("code",null,"develop"),", elle n'est pas déployable")),(0,i.kt)("li",null,(0,i.kt)("p",null,"on merge dans ",(0,i.kt)("code",null,"develop")," quand PR terminé")),(0,i.kt)("li",null,(0,i.kt)("p",null,"release candidate sur release branch (bugfix QA only)")),(0,i.kt)("li",null,(0,i.kt)("p",null,(0,i.kt)("code",null,"master")," accueille les tags des livrables (hoftfix prod only)"))))))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion du scope fonctionnel"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"develop")," ne contient que le scope de la future release"),(0,i.kt)("li",{parentName:"ul"},"on freeze les PR jusqu'à création branche de release"),(0,i.kt)("li",{parentName:"ul"},"la branche de release prépare la MEP (QA)"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion des MEP"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"tags de prod créés sur ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"hotfix branch créées depuis les tags de prod"),(0,i.kt)("li",{parentName:"ul"},"on déploie donc depuis ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," et pas depuis la branche d'intégration (",(0,i.kt)("inlineCode",{parentName:"li"},"develop"),")"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Avantages"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"on est pas exposé au WIP des autres"),(0,i.kt)("li",{parentName:"ul"},"on expose pas son WIP"),(0,i.kt)("li",{parentName:"ul"},"gestion facile pour le dev de base jusqu'au merge"),(0,i.kt)("li",{parentName:"ul"},"gestion débutants facile"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Inconvénients"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"confusion dans les targets des merges fréquentes\n(vers ",(0,i.kt)("inlineCode",{parentName:"li"},"develop")," ? ",(0,i.kt)("inlineCode",{parentName:"li"},"release/*")," ? ",(0,i.kt)("inlineCode",{parentName:"li"},"hotfix/*")," ? ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," ?)"),(0,i.kt)("li",{parentName:"ul"},"faible fréquence d'intégration :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"code review plus longues et difficiles"),(0,i.kt)("li",{parentName:"ul"},"conflits plus fréquents et plus complexes"),(0,i.kt)("li",{parentName:"ul"},"régressions visibles plus tard"),(0,i.kt)("li",{parentName:"ul"},"embouteillages en fin de sprint"))),(0,i.kt)("li",{parentName:"ul"},"gestion du scope fonctionnel rigide :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"peut entrainer période freeze des PR avant création branche de release"),(0,i.kt)("li",{parentName:"ul"},"difficile de dev plusieurs itérations en parallèle (plusieurs ",(0,i.kt)("inlineCode",{parentName:"li"},"develop"),")"),(0,i.kt)("li",{parentName:"ul"},"très difficile de changer de scope fonctionnel rapidement"))),(0,i.kt)("li",{parentName:"ul"},"ne scale pas"),(0,i.kt)("li",{parentName:"ul"},"gestion lourde pour le Repo Owner (nombreux reports de code)"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Cercle vicieux"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Certains inconvénients entrainent d'autres inconvénients :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"conflits fréquents et difficiles entrainent peur de la refacto entraine baisse qualité"),(0,i.kt)("li",{parentName:"ul"},"régressions détectées plus tard entrainent baisse qualité et baisse productivité"),(0,i.kt)("li",{parentName:"ul"},"embouteillages fin sprint entrainent rush et stress"),(0,i.kt)("li",{parentName:"ul"},"difficultés à dev en parallèle des versions mal comprises du métier",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"incompréhension des causes techniques"),(0,i.kt)("li",{parentName:"ul"},"incompréhension des conséquences des choix de scopage des releases par le métier\n(cf ",(0,i.kt)("a",{parentName:"li",href:"https://trunkbaseddevelopment.com/concurrent-development-of-consecutive-releases/"},"Concurrent development of consecutive releases - trunkbaseddevelopment.com"),")"))),(0,i.kt)("li",{parentName:"ul"},"etc ...")))],o=[0,0,0,0,0,0,0],s=[0,0,0,0,0,0,0],p=[{},{},{},{},{},{},{}],k={},m="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(m,r({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Feature Branching (GitFlow)"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Principes de base"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://nvie.com/posts/a-successful-git-branching-model/"},"GitFlow")),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(4993),alt:"GitFlow",className:"img-33"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("ul",{className:"flexblock specs"},(0,i.kt)("li",null,(0,i.kt)("p",null,"1 branche ",(0,i.kt)("code",null,"=")," 1 feature")),(0,i.kt)("li",null,(0,i.kt)("p",null,"la branche de collaboration est ",(0,i.kt)("code",null,"develop"),", elle n'est pas déployable")),(0,i.kt)("li",null,(0,i.kt)("p",null,"on merge dans ",(0,i.kt)("code",null,"develop")," quand PR terminé")),(0,i.kt)("li",null,(0,i.kt)("p",null,"release candidate sur release branch (bugfix QA only)")),(0,i.kt)("li",null,(0,i.kt)("p",null,(0,i.kt)("code",null,"master")," accueille les tags des livrables (hoftfix prod only)")))))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion du scope fonctionnel"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"develop")," ne contient que le scope de la future release"),(0,i.kt)("li",{parentName:"ul"},"on freeze les PR jusqu'à création branche de release"),(0,i.kt)("li",{parentName:"ul"},"la branche de release prépare la MEP (QA)")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion des MEP"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"tags de prod créés sur ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"hotfix branch créées depuis les tags de prod"),(0,i.kt)("li",{parentName:"ul"},"on déploie donc depuis ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," et pas depuis la branche d'intégration (",(0,i.kt)("inlineCode",{parentName:"li"},"develop"),")")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Avantages"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"on est pas exposé au WIP des autres"),(0,i.kt)("li",{parentName:"ul"},"on expose pas son WIP"),(0,i.kt)("li",{parentName:"ul"},"gestion facile pour le dev de base jusqu'au merge"),(0,i.kt)("li",{parentName:"ul"},"gestion débutants facile")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Inconvénients"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"confusion dans les targets des merges fréquentes\n(vers ",(0,i.kt)("inlineCode",{parentName:"li"},"develop")," ? ",(0,i.kt)("inlineCode",{parentName:"li"},"release/*")," ? ",(0,i.kt)("inlineCode",{parentName:"li"},"hotfix/*")," ? ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," ?)"),(0,i.kt)("li",{parentName:"ul"},"faible fréquence d'intégration :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"code review plus longues et difficiles"),(0,i.kt)("li",{parentName:"ul"},"conflits plus fréquents et plus complexes"),(0,i.kt)("li",{parentName:"ul"},"régressions visibles plus tard"),(0,i.kt)("li",{parentName:"ul"},"embouteillages en fin de sprint"))),(0,i.kt)("li",{parentName:"ul"},"gestion du scope fonctionnel rigide :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"peut entrainer période freeze des PR avant création branche de release"),(0,i.kt)("li",{parentName:"ul"},"difficile de dev plusieurs itérations en parallèle (plusieurs ",(0,i.kt)("inlineCode",{parentName:"li"},"develop"),")"),(0,i.kt)("li",{parentName:"ul"},"très difficile de changer de scope fonctionnel rapidement"))),(0,i.kt)("li",{parentName:"ul"},"ne scale pas"),(0,i.kt)("li",{parentName:"ul"},"gestion lourde pour le Repo Owner (nombreux reports de code)")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Feature Branching (GitFlow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Cercle vicieux"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Certains inconvénients entrainent d'autres inconvénients :"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"conflits fréquents et difficiles entrainent peur de la refacto entraine baisse qualité"),(0,i.kt)("li",{parentName:"ul"},"régressions détectées plus tard entrainent baisse qualité et baisse productivité"),(0,i.kt)("li",{parentName:"ul"},"embouteillages fin sprint entrainent rush et stress"),(0,i.kt)("li",{parentName:"ul"},"difficultés à dev en parallèle des versions mal comprises du métier",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"incompréhension des causes techniques"),(0,i.kt)("li",{parentName:"ul"},"incompréhension des conséquences des choix de scopage des releases par le métier\n(cf ",(0,i.kt)("a",{parentName:"li",href:"https://trunkbaseddevelopment.com/concurrent-development-of-consecutive-releases/"},"Concurrent development of consecutive releases - trunkbaseddevelopment.com"),")"))),(0,i.kt)("li",{parentName:"ul"},"etc ...")))}d.isMDXComponent=!0},5971:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Continuous Integration Oriented (Trunk-based Dev)")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Principes de base"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://kean.github.io/post/trunk-based-development"},"Trunk-Based Development")),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(1167),alt:"Trunk Based Dev",className:"img-50"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("ul",{className:"flexblock specs"},(0,i.kt)("li",null,(0,i.kt)("p",null,"1 branche ",(0,i.kt)("code",null,"!=")," 1 feature, 1 branche ",(0,i.kt)("code",null,"=")," 1 petite révision (2h de taf, 2j maxi)")),(0,i.kt)("li",null,(0,i.kt)("p",null,"on merge ASAP")),(0,i.kt)("li",null,(0,i.kt)("p",null,"une seule branche de collaboration (le trunk / ",(0,i.kt)("code",null,"master"),")")),(0,i.kt)("li",null,(0,i.kt)("p",null,(0,i.kt)("code",null,"master")," est toujours stable et déployable")),(0,i.kt)("li",null,(0,i.kt)("p",null,"chaque révision est déployée en env de test, recette, QA, ..."))))))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion du scope fonctionnel :"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Via feature toggle (ou flipping, ou flags)"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1er commit d'une feature implémente le toggle"),(0,i.kt)("li",{parentName:"ul"},"généralement au runtime mais peut aussi être réalisé au build"),(0,i.kt)("li",{parentName:"ul"},"peuvent servir pour A/B testing"),(0,i.kt)("li",{parentName:"ul"},"on merge avec tous les toggles activés"),(0,i.kt)("li",{parentName:"ul"},"on peut scoper les releases via toggle")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Quand une feature est OK, le toggle est supprimé de la codebase.\nSinon c'est plus du toggle mais de la configuration, donc une feature en soi."),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"La complexité de la gestion des branches est transférée dans la complexité applicative."))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion des MEP"),(0,i.kt)("img",{src:l(8699),alt:"Trunk Based Dev Releases",className:"img-33"}),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MEP a échéances fixes",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on crée release branch depuis ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," pour préparer les MEP (QA)"),(0,i.kt)("li",{parentName:"ul"},"on fix les bugs levés par QA sur ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"on ",(0,i.kt)("strong",{parentName:"li"},"cherry-pick")," de ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," vers release-branch"))),(0,i.kt)("li",{parentName:"ul"},"hotfix",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on crée une release branch depuis le dernier tag en prod"),(0,i.kt)("li",{parentName:"ul"},"on dev le hotfix sur ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"on ",(0,i.kt)("strong",{parentName:"li"},"cherry-pick")," de ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," vers release-branch"))),(0,i.kt)("li",{parentName:"ul"},"on peut MEP quand on veut (Continuous Delivery)"),(0,i.kt)("li",{parentName:"ul"},"on peut MEP à chaque révision (Continuous Deployment)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"stade ultime du chemin DevOps"),(0,i.kt)("li",{parentName:"ul"},"un commit mergé dans ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," va automatiquement en prod si pipeline OK"))))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"suppose automatisation totale des tests (acceptance inclus)"),(0,i.kt)("li",{parentName:"ul"},"suppose une infra solide"),(0,i.kt)("li",{parentName:"ul"},"nécessite provisionning d'environnement"),(0,i.kt)("li",{parentName:"ul"},"feature toggle (ou flipping, ou flags) obligatoire"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Avantages"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"intégration continue effective"),(0,i.kt)("li",{parentName:"ul"},"facile de pousser/récupérer du travail transverse"),(0,i.kt)("li",{parentName:"ul"},"code review rapides et faciles"),(0,i.kt)("li",{parentName:"ul"},"conflits petits et faciles si pas inexistants"),(0,i.kt)("li",{parentName:"ul"},"régressions visibles immédiatement"),(0,i.kt)("li",{parentName:"ul"},"fluide (pas d'emboutillage, pas de période de freeze)"),(0,i.kt)("li",{parentName:"ul"},"scalabilité"),(0,i.kt)("li",{parentName:"ul"},"très facile de changer de scope fonctionnel à la demande"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Inconvénients"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"historique dégueux (impossible de générer un CHANGELOG lisible)"),(0,i.kt)("li",{parentName:"ul"},"feature flipping pénible à gérer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"augmente la complexité"),(0,i.kt)("li",{parentName:"ul"},"augmente la combinatoire des tests"),(0,i.kt)("li",{parentName:"ul"},"gérer les différents environnements"))),(0,i.kt)("li",{parentName:"ul"},"nécessite une équipe majoritairement senior sur la pratique"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"DevOps"),(0,i.kt)("p",null,"Point de vue DevOps c'est aujourd'hui l'état de l'art en matière de gestion de codebase."),(0,i.kt)("br",null),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(4074),alt:"Accelerate book",className:"img-10"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("p",null,'Cf "Accelerate, The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations"'),(0,i.kt)("p",null,"27 mars 2018"),(0,i.kt)("p",null,"https://itrevolution.com/book/accelerate/")))))],o=[0,0,0,0,0,0,0,0],s=[0,0,0,0,0,0,0,0],p=[{},{},{},{},{},{},{},{}],k={},m="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(m,r({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Continuous Integration Oriented (Trunk-based Dev)"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"Principes de base"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://kean.github.io/post/trunk-based-development"},"Trunk-Based Development")),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(1167),alt:"Trunk Based Dev",className:"img-50"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("ul",{className:"flexblock specs"},(0,i.kt)("li",null,(0,i.kt)("p",null,"1 branche ",(0,i.kt)("code",null,"!=")," 1 feature, 1 branche ",(0,i.kt)("code",null,"=")," 1 petite révision (2h de taf, 2j maxi)")),(0,i.kt)("li",null,(0,i.kt)("p",null,"on merge ASAP")),(0,i.kt)("li",null,(0,i.kt)("p",null,"une seule branche de collaboration (le trunk / ",(0,i.kt)("code",null,"master"),")")),(0,i.kt)("li",null,(0,i.kt)("p",null,(0,i.kt)("code",null,"master")," est toujours stable et déployable")),(0,i.kt)("li",null,(0,i.kt)("p",null,"chaque révision est déployée en env de test, recette, QA, ...")))))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion du scope fonctionnel :"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Via feature toggle (ou flipping, ou flags)"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1er commit d'une feature implémente le toggle"),(0,i.kt)("li",{parentName:"ul"},"généralement au runtime mais peut aussi être réalisé au build"),(0,i.kt)("li",{parentName:"ul"},"peuvent servir pour A/B testing"),(0,i.kt)("li",{parentName:"ul"},"on merge avec tous les toggles activés"),(0,i.kt)("li",{parentName:"ul"},"on peut scoper les releases via toggle")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Quand une feature est OK, le toggle est supprimé de la codebase.\nSinon c'est plus du toggle mais de la configuration, donc une feature en soi."),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"La complexité de la gestion des branches est transférée dans la complexité applicative.")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion des MEP"),(0,i.kt)("img",{src:l(8699),alt:"Trunk Based Dev Releases",className:"img-33"}),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MEP a échéances fixes",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on crée release branch depuis ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," pour préparer les MEP (QA)"),(0,i.kt)("li",{parentName:"ul"},"on fix les bugs levés par QA sur ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"on ",(0,i.kt)("strong",{parentName:"li"},"cherry-pick")," de ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," vers release-branch"))),(0,i.kt)("li",{parentName:"ul"},"hotfix",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on crée une release branch depuis le dernier tag en prod"),(0,i.kt)("li",{parentName:"ul"},"on dev le hotfix sur ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"on ",(0,i.kt)("strong",{parentName:"li"},"cherry-pick")," de ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," vers release-branch"))),(0,i.kt)("li",{parentName:"ul"},"on peut MEP quand on veut (Continuous Delivery)"),(0,i.kt)("li",{parentName:"ul"},"on peut MEP à chaque révision (Continuous Deployment)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"stade ultime du chemin DevOps"),(0,i.kt)("li",{parentName:"ul"},"un commit mergé dans ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," va automatiquement en prod si pipeline OK")))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"suppose automatisation totale des tests (acceptance inclus)"),(0,i.kt)("li",{parentName:"ul"},"suppose une infra solide"),(0,i.kt)("li",{parentName:"ul"},"nécessite provisionning d'environnement"),(0,i.kt)("li",{parentName:"ul"},"feature toggle (ou flipping, ou flags) obligatoire")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"Avantages"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"intégration continue effective"),(0,i.kt)("li",{parentName:"ul"},"facile de pousser/récupérer du travail transverse"),(0,i.kt)("li",{parentName:"ul"},"code review rapides et faciles"),(0,i.kt)("li",{parentName:"ul"},"conflits petits et faciles si pas inexistants"),(0,i.kt)("li",{parentName:"ul"},"régressions visibles immédiatement"),(0,i.kt)("li",{parentName:"ul"},"fluide (pas d'emboutillage, pas de période de freeze)"),(0,i.kt)("li",{parentName:"ul"},"scalabilité"),(0,i.kt)("li",{parentName:"ul"},"très facile de changer de scope fonctionnel à la demande")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"Inconvénients"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"historique dégueux (impossible de générer un CHANGELOG lisible)"),(0,i.kt)("li",{parentName:"ul"},"feature flipping pénible à gérer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"augmente la complexité"),(0,i.kt)("li",{parentName:"ul"},"augmente la combinatoire des tests"),(0,i.kt)("li",{parentName:"ul"},"gérer les différents environnements"))),(0,i.kt)("li",{parentName:"ul"},"nécessite une équipe majoritairement senior sur la pratique")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Integration Oriented (Trunk-based Dev)",mdxType:"Header"}),(0,i.kt)("h3",null,"DevOps"),(0,i.kt)("p",null,"Point de vue DevOps c'est aujourd'hui l'état de l'art en matière de gestion de codebase."),(0,i.kt)("br",null),(0,i.kt)("div",{className:"wrap"},(0,i.kt)("div",{className:"card-50 bg-white"},(0,i.kt)("img",{src:l(4074),alt:"Accelerate book",className:"img-10"}),(0,i.kt)("div",{className:"flex-content"},(0,i.kt)("p",null,'Cf "Accelerate, The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations"'),(0,i.kt)("p",null,"27 mars 2018"),(0,i.kt)("p",null,"https://itrevolution.com/book/accelerate/")))))}d.isMDXComponent=!0},402:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Continuous Delivery Oriented (GitHub/GitLab Flow)")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Principes de base"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://scottchacon.com/2011/08/31/github-flow.html"},"GitHub Flow")," / ",(0,i.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/workflow/gitlab_flow.html"},"GitLab Flow")),(0,i.kt)("img",{src:l(3220),alt:"Github Flow",className:"img-50"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 branche ",(0,i.kt)("inlineCode",{parentName:"li"},"=")," 1 feature"),(0,i.kt)("li",{parentName:"ul"},"une seule branche de collaboration (le trunk / ",(0,i.kt)("inlineCode",{parentName:"li"},"master"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"master")," est toujours stable et déployable"),(0,i.kt)("li",{parentName:"ul"},"on ouvre la PR dès le début"),(0,i.kt)("li",{parentName:"ul"},"on pousse régulièrement sur ",(0,i.kt)("inlineCode",{parentName:"li"},"origin")),(0,i.kt)("li",{parentName:"ul"},"intégration continue ",(0,i.kt)("strong",{parentName:"li"},"inversée")," (on tire depuis ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," vers PR)"),(0,i.kt)("li",{parentName:"ul"},"quand review ok :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on verrouille ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," via un bot sur slack"),(0,i.kt)("li",{parentName:"ul"},"on merge ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," dans feature branch"),(0,i.kt)("li",{parentName:"ul"},"on déploie ",(0,i.kt)("strong",{parentName:"li"},"en prod")),(0,i.kt)("li",{parentName:"ul"},"on teste, on évalue les métriques, etc ..."))),(0,i.kt)("li",{parentName:"ul"},"quand test OK on merge la PR et on libère ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"si test KO on rollback la prod et on libère ",(0,i.kt)("inlineCode",{parentName:"li"},"master")))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion du scope fonctionnel"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"si MEP scopée les features non voulues restent en PR"),(0,i.kt)("li",{parentName:"ul"},"pas de scope fonctionnel, on pousse ",(0,i.kt)("strong",{parentName:"li"},"en prod")," au fil de l'eau")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Les features sont seulement priorisées dans le backlog, et : ",(0,i.kt)("em",{parentName:"p"},"It's done when it's done"),".")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion des MEP"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"pas de releases définies à l'avance, on déploie ASAP ",(0,i.kt)("strong",{parentName:"li"},"en prod")),(0,i.kt)("li",{parentName:"ul"},"si problème rollback"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"suppose automatisation totale des tests (acceptance inclus)"),(0,i.kt)("li",{parentName:"ul"},"suppose une infra solide"),(0,i.kt)("li",{parentName:"ul"},"nécessite provisionning d'environnement"),(0,i.kt)("li",{parentName:"ul"},"GitLab Flow propose des variances\n(branches d'environnements pour déploiement en fast-forward only, permet QA/recette manuelle avant passage prod)"),(0,i.kt)("li",{parentName:"ul"},"GitHub Flow suppose que les devs aient la main sur les outils de monitoring et de déploiement ",(0,i.kt)("strong",{parentName:"li"},"de prod")))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Avantages"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"très simple à gérer pour les devs"),(0,i.kt)("li",{parentName:"ul"},"code review au coeur du workflow"),(0,i.kt)("li",{parentName:"ul"},"scalabilité"),(0,i.kt)("li",{parentName:"ul"},"pas de feature flipping complexe à gérer"))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("h3",null,"Inconvénients"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"historique dégueux si merge policy ",(0,i.kt)("inlineCode",{parentName:"li"},">")," rebase policy"),(0,i.kt)("li",{parentName:"ul"},"infra très avancée + beaucoup de tooling obligatoire"),(0,i.kt)("li",{parentName:"ul"},"en rupture avec la culture d'entreprise classique",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"suppression des silos dev / qa / fonctionnels / managers / ops"),(0,i.kt)("li",{parentName:"ul"},"pas de scope fonctionnel"),(0,i.kt)("li",{parentName:"ul"},"c'est top mais mission impossible à faire accepter")))))],o=[0,0,0,0,0,0,0],s=[0,0,0,0,0,0,0],p=[{},{},{},{},{},{},{}],k={},m="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(m,r({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Continuous Delivery Oriented (GitHub/GitLab Flow)"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Principes de base"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://scottchacon.com/2011/08/31/github-flow.html"},"GitHub Flow")," / ",(0,i.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/workflow/gitlab_flow.html"},"GitLab Flow")),(0,i.kt)("img",{src:l(3220),alt:"Github Flow",className:"img-50"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 branche ",(0,i.kt)("inlineCode",{parentName:"li"},"=")," 1 feature"),(0,i.kt)("li",{parentName:"ul"},"une seule branche de collaboration (le trunk / ",(0,i.kt)("inlineCode",{parentName:"li"},"master"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"master")," est toujours stable et déployable"),(0,i.kt)("li",{parentName:"ul"},"on ouvre la PR dès le début"),(0,i.kt)("li",{parentName:"ul"},"on pousse régulièrement sur ",(0,i.kt)("inlineCode",{parentName:"li"},"origin")),(0,i.kt)("li",{parentName:"ul"},"intégration continue ",(0,i.kt)("strong",{parentName:"li"},"inversée")," (on tire depuis ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," vers PR)"),(0,i.kt)("li",{parentName:"ul"},"quand review ok :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on verrouille ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," via un bot sur slack"),(0,i.kt)("li",{parentName:"ul"},"on merge ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," dans feature branch"),(0,i.kt)("li",{parentName:"ul"},"on déploie ",(0,i.kt)("strong",{parentName:"li"},"en prod")),(0,i.kt)("li",{parentName:"ul"},"on teste, on évalue les métriques, etc ..."))),(0,i.kt)("li",{parentName:"ul"},"quand test OK on merge la PR et on libère ",(0,i.kt)("inlineCode",{parentName:"li"},"master")),(0,i.kt)("li",{parentName:"ul"},"si test KO on rollback la prod et on libère ",(0,i.kt)("inlineCode",{parentName:"li"},"master"))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion du scope fonctionnel"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"si MEP scopée les features non voulues restent en PR"),(0,i.kt)("li",{parentName:"ul"},"pas de scope fonctionnel, on pousse ",(0,i.kt)("strong",{parentName:"li"},"en prod")," au fil de l'eau")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Les features sont seulement priorisées dans le backlog, et : ",(0,i.kt)("em",{parentName:"p"},"It's done when it's done"),"."),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Gestion des MEP"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"pas de releases définies à l'avance, on déploie ASAP ",(0,i.kt)("strong",{parentName:"li"},"en prod")),(0,i.kt)("li",{parentName:"ul"},"si problème rollback")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Prérequis"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"suppose automatisation totale des tests (acceptance inclus)"),(0,i.kt)("li",{parentName:"ul"},"suppose une infra solide"),(0,i.kt)("li",{parentName:"ul"},"nécessite provisionning d'environnement"),(0,i.kt)("li",{parentName:"ul"},"GitLab Flow propose des variances\n(branches d'environnements pour déploiement en fast-forward only, permet QA/recette manuelle avant passage prod)"),(0,i.kt)("li",{parentName:"ul"},"GitHub Flow suppose que les devs aient la main sur les outils de monitoring et de déploiement ",(0,i.kt)("strong",{parentName:"li"},"de prod"))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Avantages"),(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"très simple à gérer pour les devs"),(0,i.kt)("li",{parentName:"ul"},"code review au coeur du workflow"),(0,i.kt)("li",{parentName:"ul"},"scalabilité"),(0,i.kt)("li",{parentName:"ul"},"pas de feature flipping complexe à gérer")),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Continuous Delivery Oriented (GitHub/GitLab Flow)",mdxType:"Header"}),(0,i.kt)("h3",null,"Inconvénients"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"historique dégueux si merge policy ",(0,i.kt)("inlineCode",{parentName:"li"},">")," rebase policy"),(0,i.kt)("li",{parentName:"ul"},"infra très avancée + beaucoup de tooling obligatoire"),(0,i.kt)("li",{parentName:"ul"},"en rupture avec la culture d'entreprise classique",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"suppression des silos dev / qa / fonctionnels / managers / ops"),(0,i.kt)("li",{parentName:"ul"},"pas de scope fonctionnel"),(0,i.kt)("li",{parentName:"ul"},"c'est top mais mission impossible à faire accepter")))))}d.isMDXComponent=!0},2334:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>o,default:()=>d,fragmentSteps:()=>s,fusumaProps:()=>p,slides:()=>u});var n=l(4059),a=l(7401),i=l(9332);l(108);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}const u=[e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("h2",null,"Conclusion")),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Conclusion",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("h2",null,"L'intégration continue (la pratique) a une définition très précise"),(0,i.kt)("p",null,"On merge tout le temps, même quand pas terminé")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Difficile à mettre en oeuvre"),(0,i.kt)("p",null,"Nécessite"),(0,i.kt)("p",null,"→ un gros investissement d'infrastructure (ou de dépendre de services tiers)"),(0,i.kt)("p",null,"→ un haut degré d'automatisation des tests (pas de test manuel)"),(0,i.kt)("p",null,"→ de gros changements de culture d'entreprise")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Au coeur de la culture DevOps"),(0,i.kt)("p",null,"Les GitHub/GitLab flow sont plus orientés CD que CI au sens strict."),(0,i.kt)("p",null,"Les GAFAM et les licornes de la Silicon Valley l'utilisent tous : Google, Amazon, Microsoft, GitHub, etc ..."),(0,i.kt)("p",null,"En France des sociétés comme BlablaCar, LesFurets, Doctolib, ..."),(0,i.kt)("p",null,"En France aucun grand compte à ma connaissance (sauf SoGé en finance de marché)"))))),e=>(0,i.kt)(a.Fragment,null,(0,i.kt)(n.h,{title:"Intégration Continue",section:"Conclusion",mdxType:"Header",mdxType:"Header"}),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("h2",null,"Souvent des projets web BtoC"),(0,i.kt)("p",null,"Releases fixes scopées pas utiles."),(0,i.kt)("p",null,"Prio TTM le plus court possible.")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Les projets opensource sont peu concernés"),(0,i.kt)("p",null,"Se tournent plutôt vers du GitHub/GitLab Flow réadapté."),(0,i.kt)("p",null,"Aucun sens de livrer 35 versions d'une lib par jour."),(0,i.kt)("p",null,"Travail effectif rarement en fulltime.")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Tout démarre à partir du workflow Git")))))],o=[0,0,0],s=[0,0,0],p=[{},{},{}],k={},m="wrapper";function d(e){let{components:t,...l}=e;return(0,i.kt)(m,r({},k,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Conclusion"),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Conclusion",mdxType:"Header"}),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("h2",null,"L'intégration continue (la pratique) a une définition très précise"),(0,i.kt)("p",null,"On merge tout le temps, même quand pas terminé")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Difficile à mettre en oeuvre"),(0,i.kt)("p",null,"Nécessite"),(0,i.kt)("p",null,"→ un gros investissement d'infrastructure (ou de dépendre de services tiers)"),(0,i.kt)("p",null,"→ un haut degré d'automatisation des tests (pas de test manuel)"),(0,i.kt)("p",null,"→ de gros changements de culture d'entreprise")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Au coeur de la culture DevOps"),(0,i.kt)("p",null,"Les GitHub/GitLab flow sont plus orientés CD que CI au sens strict."),(0,i.kt)("p",null,"Les GAFAM et les licornes de la Silicon Valley l'utilisent tous : Google, Amazon, Microsoft, GitHub, etc ..."),(0,i.kt)("p",null,"En France des sociétés comme BlablaCar, LesFurets, Doctolib, ..."),(0,i.kt)("p",null,"En France aucun grand compte à ma connaissance (sauf SoGé en finance de marché)")))),(0,i.kt)("hr",null),(0,i.kt)(n.h,{title:"Intégration Continue",section:"Conclusion",mdxType:"Header"}),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("h2",null,"Souvent des projets web BtoC"),(0,i.kt)("p",null,"Releases fixes scopées pas utiles."),(0,i.kt)("p",null,"Prio TTM le plus court possible.")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Les projets opensource sont peu concernés"),(0,i.kt)("p",null,"Se tournent plutôt vers du GitHub/GitLab Flow réadapté."),(0,i.kt)("p",null,"Aucun sens de livrer 35 versions d'une lib par jour."),(0,i.kt)("p",null,"Travail effectif rarement en fulltime.")),(0,i.kt)("li",null,(0,i.kt)("h2",null,"Tout démarre à partir du workflow Git")))))}d.isMDXComponent=!0},5018:(e,t,l)=>{"use strict";l.r(t),l.d(t,{backgrounds:()=>u,default:()=>m,fragmentSteps:()=>o,fusumaProps:()=>s,slides:()=>r});var n=l(7401),a=l(9332);l(108);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},i.apply(this,arguments)}const r=[e=>(0,a.kt)(n.Fragment,null,(0,a.kt)("h2",null,"Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.thoughtworks.com/continuous-integration"},"www.thoughtworks.com")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.martinfowler.com/articles/continuousIntegration.html"},"Continuous Integration, Martin Fowler - 01/05/2006")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nvie.com/posts/a-successful-git-branching-model/"},"A successful Git branching model, Vincent Driessen - 05/01/2010")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://kean.github.io/post/trunk-based-development"},"Trunk-Based Development, Alexander Grebenyuk - 23/03/2018")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://trunkbaseddevelopment.com/"},"trunkbaseddevelopment.com - 2017")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://less.works/less/technical-excellence/continuous-integration.html"},"Continuous Integration, LeSS Company - 2014-2019")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://scottchacon.com/2011/08/31/github-flow.html"},"GitHub Flow - Scott Chacon - 31/08/2011")," / ",(0,a.kt)("a",{parentName:"li",href:"https://guides.github.com/introduction/flow/"},"Voir aussi")," / ",(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=jCwzf9adAtE"},"En vidéo, Alain Hélaïli@Devoxx2016")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/workflow/gitlab_flow.html"},"Introduction to GitLab Flow - Documentation GitLab"))))],u=[0],o=[0],s=[{}],p={},k="wrapper";function m(e){let{components:t,...l}=e;return(0,a.kt)(k,i({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",null,"Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.thoughtworks.com/continuous-integration"},"www.thoughtworks.com")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.martinfowler.com/articles/continuousIntegration.html"},"Continuous Integration, Martin Fowler - 01/05/2006")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nvie.com/posts/a-successful-git-branching-model/"},"A successful Git branching model, Vincent Driessen - 05/01/2010")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://kean.github.io/post/trunk-based-development"},"Trunk-Based Development, Alexander Grebenyuk - 23/03/2018")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://trunkbaseddevelopment.com/"},"trunkbaseddevelopment.com - 2017")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://less.works/less/technical-excellence/continuous-integration.html"},"Continuous Integration, LeSS Company - 2014-2019")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://scottchacon.com/2011/08/31/github-flow.html"},"GitHub Flow - Scott Chacon - 31/08/2011")," / ",(0,a.kt)("a",{parentName:"li",href:"https://guides.github.com/introduction/flow/"},"Voir aussi")," / ",(0,a.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=jCwzf9adAtE"},"En vidéo, Alain Hélaïli@Devoxx2016")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/workflow/gitlab_flow.html"},"Introduction to GitLab Flow - Documentation GitLab"))))}m.isMDXComponent=!0},3677:(e,t,l)=>{"use strict";l.r(t)},3447:(e,t,l)=>{var n={"./0-title.md":1408,"./01-content.md":2140,"./02-quiproquo.md":6109,"./03-origine.md":7390,"./04-definitions.md":339,"./05-feature-branching.md":4227,"./06-ci-oriented.md":5971,"./07-cd-oriented.md":402,"./08-conclusion.md":2334,"./09-sources.md":5018};function a(e){var t=i(e);return l(t)}function i(e){if(!l.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id=3447},4074:(e,t,l)=>{"use strict";e.exports=l.p+"d68911d4071a3e71fa3b.webp"},8895:(e,t,l)=>{"use strict";e.exports=l.p+"af016e75be0d27044efa.webp"},4993:(e,t,l)=>{"use strict";e.exports=l.p+"00e4fc71d5d6f06e0227.webp"},3220:(e,t,l)=>{"use strict";e.exports=l.p+"498b0b529dac793694d4.webp"},8699:(e,t,l)=>{"use strict";e.exports=l.p+"f5d8151e8d7987a14d9a.webp"},1167:(e,t,l)=>{"use strict";e.exports=l.p+"98e513faaa010960da6e.webp"}},e=>{e.O(0,[179],(()=>{[901,921,880].map(e.E)}),5);var t=t=>e(e.s=t);e.O(0,[736],(()=>(t(7751),t(6905),t(9969))));e.O()}]);